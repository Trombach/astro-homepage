---
import { getEntry } from "astro:content";
import Avatar from "./Avatar.astro";
import AppLink from "@components/AppLink.astro";
import PlusIcon from "icons:astro/heroicons/plus";

const {
  data: { person },
} = await getEntry("about", "about-me");
const { data } = await getEntry(person);

const me = {
  Name: data.name,
  Age: Math.floor((Date.now() - data.birthday.getTime()) / 31_556_952_000), // age in years
  From: data.from,
  Location: data.currentLocation,
  Experience: `${new Date().getFullYear() - data.industryStart} years`,
  Education: data.education,
} as const;
---

<div class="flex flex-col lg:flex-row h-full w-full items-stretch justify-between">
  <div class="gradient basis-1/3 rounded-t-xl lg:rounded-l-xl flex flex-col items-center">
    <Avatar image={data.avatar} class="mt-5 size-24 @lg:size-32" />
    <div class="mx-auto mt-5 max-w-fit max-h-fit rounded-full bg-background">
      <AppLink
        as="a"
        href="/lukas-trombach.vcf"
        download="lukas-trombach.vcf"
        class="text-center max-w-fit pl-3"
      >
        <PlusIcon />
        <span>Add</span>
      </AppLink>
    </div>
  </div>
  <ul class="table mx-5 md:mr-10 basis-2/3 py-5 @lg:py-10">
    {
      Object.entries(me).map(([key, value]) => (
        <li class="table-row">
          <span class="table-cell text-sm align-middle font-bold @lg:text-lg">
            {key}:
          </span>
          <span class="table-cell bg-background w-3/5 border-b border-t-0 border-x-0 border-dashed align-middle font-mono text-sm @lg:text-lg">
            {value}
          </span>
        </li>
      ))
    }
  </ul>
</div>

<style>
  .gradient {
    --gradient-direction: 160deg;
    @media screen(lg) {--gradient-direction: 105deg;}
    --spacing-1: 2%;
    --spacing-2: 1.5%;
    --width-1: 6%;
    --width-2: 1.25%;
    --gradient-stop-1: 30%;
    --gradient-stop-2: calc(var(--gradient-stop-1) + var(--spacing-1));
    --gradient-stop-3: calc(var(--gradient-stop-2) + var(--width-1));
    --gradient-stop-4: calc(var(--gradient-stop-3) + var(--spacing-2)); 
    --gradient-stop-5: calc(var(--gradient-stop-4) + var(--width-2));

    background-image: linear-gradient(
        var(--gradient-direction),
        theme(colors.primary.DEFAULT),
        theme(colors.primary.DEFAULT) calc(var(--gradient-stop-1) - 1px),
        transparent var(--gradient-stop-1),
        transparent calc(var(--gradient-stop-2) - 1px),
        theme(colors.primary.green) var(--gradient-stop-2),
        theme(colors.primary.green) calc(var(--gradient-stop-3) - 1px),
        transparent var(--gradient-stop-3),
        transparent calc(var(--gradient-stop-4) - 1px),
        theme(colors.primary.pink) var(--gradient-stop-4),
        theme(colors.primary.pink) calc(var(--gradient-stop-5) - 1px),
        transparent var(--gradient-stop-5)
      );
  }
</style>
