---
import { getEntry } from "astro:content";
import AnimatedText from "./AnimatedText.svelte";
import Avatar from "./Avatar.astro";

const {
  data: { person },
} = await getEntry("about", "about-me");
const { data } = await getEntry(person);

const me = {
  Name: data.name,
  Age: Math.floor((Date.now() - data.birthday.getTime()) / 31_556_952_000), // age in years
  From: data.from,
  Location: data.currentLocation,
  Experience: `${new Date().getFullYear() - data.industryStart} years`,
  Education: data.education,
} as const;
---

<div
  data-card-face="front"
  class="flex h-full w-full flex-col items-stretch justify-between lg:flex-row"
>
  <div class="gradient basis-1/3 rounded-xl">
    <Avatar
      image={data.avatar}
      class="mx-auto mt-5 size-24 md:size-32 lg:mt-10"
    />
  </div>
  <ul
    class="table basis-2/3 px-2 py-10 [--cursor-color:theme(colors.foreground)] [--cursor-width:1px] md:p-10 lg:px-0 lg:py-20"
  >
    {
      Object.entries(me).map(([key, value]) => (
        <li class="table-row align-bottom">
          <AnimatedText client:only="svelte">
            <span
              data-static
              class="table-cell p-3 align-middle text-lg font-bold"
            >
              {key}:
            </span>
            <div class="table-cell w-4/5 p-3 align-middle font-mono text-xl">
              {value}
            </div>
          </AnimatedText>
        </li>
      ))
    }
  </ul>
</div>

<style>
  .gradient {
    --gradient-stop: 45%;

    @media screen(md) {
      --gradient-stop: 40%;
    }

    background-image: linear-gradient(
      to bottom right,
      theme(colors.primary.DEFAULT),
      theme(colors.primary.DEFAULT) var(--gradient-stop),
      transparent var(--gradient-stop)
    );
  }
</style>
