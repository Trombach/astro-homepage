<script is:inline>
  if (!window.ThemeProvider) {
    window.ThemeProvider = {
      updateTheme: (doc = document) => {
        if (
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          doc.documentElement.classList.add("dark");
        } else {
          doc.documentElement.classList.remove("dark");
        }

        swapThemeIcon(doc);
      },
      getTheme: () => localStorage.getItem("theme") || "auto",
      setTheme: (theme) => {
        switch (theme) {
          default:
          case "auto":
            localStorage.removeItem("theme");
            break;
          case "dark":
            localStorage.setItem("theme", "dark");
            break;
          case "light":
            localStorage.setItem("theme", "light");
            break;
        }
      },
    };
  }

  function swapThemeIcon(doc = document) {
    const iconMap = new Map([
      ["auto", "desktop-theme-icon"],
      ["dark", "moon-theme-icon"],
      ["light", "sun-theme-icon"],
    ]);

    const theme = localStorage.getItem("theme") || "auto";

    doc
      .querySelector("[id$=-theme-icon]:not(.hidden)")
      ?.classList.toggle("hidden");

    doc.querySelector(`[id=${iconMap.get(theme)}]`)?.classList.toggle("hidden");
  }
</script>
