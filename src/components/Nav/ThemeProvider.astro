<script is:inline>
  window.ThemeProvider ??= {
    initTheme: () => {
      setThemeClass();
      updateThemeSwitcher();
    },
    getTheme: () => {
      const theme = localStorage.getItem("theme") || "auto";
      if (theme !== "auto" && theme !== "dark" && theme !== "light") {
        console.debug("Unknown theme value in localStorage:", theme);
        console.debug("Resetting to 'auto'");
        localStorage.removeItem("theme");
        return "auto";
      }

      return theme;
    },
    setTheme: (theme) => {
      switch (theme) {
        default:
        case "auto":
          localStorage.removeItem("theme");
          break;
        case "dark":
          localStorage.setItem("theme", "dark");
          break;
        case "light":
          localStorage.setItem("theme", "light");
          break;
      }

      setThemeClass();
    },
  };

  function prefersDarkTheme() {
    return (
      localStorage.theme === "dark" ||
      (!("theme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    );
  }

  function updateThemeSwitcher() {
    const theme = localStorage.getItem("theme") || "auto";
    const radioButton = document.querySelector(
      `input[type=radio][name=theme]#${theme}-theme`
    );

    if (radioButton instanceof HTMLInputElement) {
      radioButton.checked = true;
    }
  }

  function setThemeClass() {
    document.documentElement.classList.toggle("dark", prefersDarkTheme());
  }

  window.addEventListener("pagereveal", window.ThemeProvider.initTheme);
</script>
