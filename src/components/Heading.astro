---
import type { HTMLAttributes, Polymorphic } from "astro/types";
import { dash, title as titleCase } from "radash";
import sanitizeHtml from "sanitize-html";

type Props<Tag extends "h1" | "h2" | "h3" | "h4" | "h5" | "h6"> = Polymorphic<{
  as: Tag;
}> &
  HTMLAttributes<Tag>;

const {
  as: Tag = "h1",
  "class:list": classList,
  class: className,
  ...props
} = Astro.props;

if (!Astro.slots.has("default")) {
  throw new Error("Missing heading text");
}

// We only want plain text here so we remove all tags
const title = sanitizeHtml(await Astro.slots.render("default"), {
  allowedTags: [],
});
---

<Tag
  id={dash(title)}
  class:list={[
    "relative isolate mb-6 text-nowrap p-2 text-left font-display",
    "after:absolute after:bottom-[20%] after:left-0 after:h-4 after:w-28 after:-skew-x-12",
    "motion-safe:hover:after:scale-x-150 motion-safe:after:transition-transform after:origin-left motion-safe:after:ease-[cubic-bezier(0.175,0.885,0.32,1.275)]",
    "text-primary-foreground",
    classList,
    className,
  ]}
  {...props}
>
  <span class="relative z-10 text-foreground">
    <Fragment set:text={titleCase(title)} />
  </span>
</Tag>

<style>
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: clamp(
      theme(fontSize.3xl),
      -2.25rem + 9.3333vw,
      theme(fontSize.5xl)
    );

    &::after {
      background-image: linear-gradient(
        to right,
        theme(colors.primary.DEFAULT) 0 calc(70% - 1px),
        transparent 70% calc(74% - 1px),
        theme(colors.primary.green) 74% calc(84% - 1px),
        transparent 84% calc(86% - 1px),
        theme(colors.primary.pink) 86% calc(87.5% - 1px),
        transparent 87.5% 100%
      );
    }
  }
</style>
