---
import { actions, isInputError } from "astro:actions";
import { TURNSTILE_SITE_KEY } from "astro:env/client";
import type { HTMLAttributes } from "astro/types";

type AllowedTags = "input" | "textarea";

type FormFields = Array<
  { label: string } & {
    [Key in AllowedTags]: { tag: Key; attributes?: HTMLAttributes<Key> };
  }[AllowedTags]
>;

const formFields = [
  {
    label: "Name",
    tag: "input",
    attributes: {
      placeholder: "Enter your name",
      type: "text",
      name: "name",
      id: "form-name",
      required: true,
    },
  },
  {
    label: "Email",
    tag: "input",
    attributes: {
      placeholder: "Enter your email",
      type: "email",
      name: "email",
      id: "form-email",
      required: true,
    },
  },
  {
    label: "Message",
    tag: "textarea",
    attributes: {
      placeholder: "Enter your message",
      rows: 5,
      name: "message",
      id: "form-message",
      required: true,
      minlength: 10,
    },
  },
] as const satisfies FormFields;

const response = Astro.getActionResult(actions.contact);
---

{
  formFields.map(({ label, tag: Tag, attributes }) => (
    <label for={attributes.id} class="flex flex-col gap-2">
      <span class="block text-sm font-medium leading-6">{label}</span>
      <Tag
        transition:persist
        {...attributes}
        class:list={[
          "rounded-lg border bg-background px-3 py-2 placeholder-slate-400 shadow-sm",
          "focus:border-primary focus:outline-none focus:ring-1 focus:ring-primary",
          "[&:user-invalid]:border-destructive",
          "focus:[&:user-invalid]:border-destructive focus:[&:user-invalid]:ring-destructive",
        ]}
      />
      {response?.error &&
        isInputError(response.error) &&
        response.error.fields[attributes.name]?.map((error) => (
          <p class="text-destructive">{error}</p>
        ))}
    </label>
  ))
}

<div
  id="cf-turnstile"
  data-sitekey={import.meta.env.DEV ? undefined : TURNSTILE_SITE_KEY}
>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const el = document.getElementById("cf-turnstile");
    if (!el) {
      return;
    }

    turnstile.render(el, {
      appearance: "interaction-only",
      sitekey: el.dataset.sitekey || "1x00000000000000000000AA",
      callback: (token) => {
        console.log(`Challenge Success ${token}`);
      },
    });
  });
</script>
