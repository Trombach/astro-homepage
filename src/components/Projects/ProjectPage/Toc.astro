---
import type { TocItem } from "@utils/generateToc";

type Props = {
  toc: TocItem[];
  depth?: number;
};

const { toc, depth = 0 } = Astro.props;
---

<menu class:list={["mt-1 text-sm leading-tight", depth && "ml-2"]}>
  {
    toc.map(({ slug, text, children }) => (
      <li class="py-1">
        <a
          href={`#${slug}`}
          class:list={[
            "inline-block text-muted-foreground hover:text-foreground",
            "data-current-heading:text-foreground",
            "data-current-url-heading:underline data-current-url-heading:decoration-primary data-current-url-heading:decoration-dotted data-current-url-heading:underline-offset-4",
          ]}
        >
          {text}
        </a>
        {children.length ? (
          <Astro.self toc={children} depth={depth + 1} />
        ) : null}
      </li>
    ))
  }
</menu>

<script>
  function setActiveHashLink() {
    document
      .querySelector("nav#secondary")
      ?.querySelectorAll("a")
      .forEach((link) => {
        if (link.hash === window.location.hash) {
          link.setAttribute("data-current-url-heading", "");
        } else {
          link.removeAttribute("data-current-url-heading");
        }
      });
  }

  // initial
  setActiveHashLink();

  // when url hash changes
  // use "popstate" since "hashchange" doesn't work with view transitions
  // https://github.com/withastro/astro/issues/10249
  window.addEventListener("popstate", setActiveHashLink);
</script>

<script src="./observe-headings.ts"></script>
