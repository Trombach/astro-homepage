---
import type { HTMLAttributes } from "astro/types";
import { uint8ArrayToBase64 } from "uint8array-extras";

const FAVICON_API = new URL("https://www.google.com/s2/favicons");

type Props = HTMLAttributes<"a"> & {
  position?: "before" | "after";
};

const { href, position = "before", ...props } = Astro.props;

let favicon: Uint8Array | undefined;
if (
  href &&
  (typeof href === "string"
    ? href.startsWith("http")
    : href.href.startsWith("http"))
) {
  const url = new URL(href);
  const searchParams = new URLSearchParams({ domain: url.hostname, sz: "64" });

  try {
    const response = await fetch(`${FAVICON_API}?${searchParams}`);
    favicon = await response.bytes();
  } catch (err) {
    console.warn(`Error fetching favicon: ${href}`, err);
  }
}

const content = (await Astro.slots.render("default")).trim();
const imageProps =
  favicon &&
  ({
    width: 16,
    height: 16,
    src: `data:image/png;base64,${uint8ArrayToBase64(favicon)}`,
    alt: "favicon",
    fetchpriority: "low",
    loading: "lazy",
    decoding: "async",
    "aria-hidden": true,
  } as const satisfies HTMLAttributes<"img">);
---

{
  favicon ? (
    <span class="whitespace-nowrap">
      {position === "before" && (
        <>
          <img {...imageProps} class="w-4 inline-block my-0 mr-1" />
          <a {href} {...props} class="whitespace-normal">
            <Fragment set:html={content} />
          </a>
        </>
      )}
      {position === "after" && (
        <>
          <a {href} {...props} class="whitespace-normal">
            <Fragment set:html={content} />
          </a>
          <img {...imageProps} class="w-4 inline-block my-0 ml-1" />
        </>
      )}
    </span>
  ) : (
    <a {href} {...props}>
      <Fragment set:html={content} />
    </a>
  )
}
