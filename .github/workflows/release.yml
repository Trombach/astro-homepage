name: Release

on:
  push:
    branches:
      - main

  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    permissions:
      contents: write
      pull-requests: write
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.CHANGESETS_PAT }}
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm i
      - name: Get latest staging ID
        id: get-staging-id
        run: |
          response=`curl -X GET "https://api.vercel.com/v6/deployments?app=astro-homepage" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            -H "Content-Type: application/json" \
            | jq '.deployments[] | select(.meta.githubCommitSha == "${{ github.sha }}")'`

          url=$(echo response | jq -r '.url')
          message=$(echo response | jq -r '.meta.githubCommitMessage') 
          echo $url
          echo $message
          echo "id=$url" >> "$GITHUB_OUTPUT"
          echo "message=$message" >> "$GITHUB_OUTPUT"
      - uses: UnlyEd/github-action-await-vercel@v2
        if: ${{ steps.get-staging-id.outputs.id == 'Version Packages' }}
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: ${{ steps.get-staging-id.outputs.id }}
          timeout: 120
          poll-interval: 5
      - name: Create Release PR
        uses: changesets/action@v1
        with:
          version: pnpm bump-version
          publish: |
            pnpm vercel promote ${{ steps.get-staging-id.outputs.id }} \
              --scope=trombachs-projects \
              --token=${{ secrets.VERCEL_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_PAT }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

